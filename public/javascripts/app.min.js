"use strict";$(function(){var t=[];t.push($("#btn-skills-more")),t.push($("#btn-skills-less"));var e=function(){t.forEach(function(t){t.toggleClass("hidden")})};t.forEach(function(t){t.on("click",e)})}),$(function(){$('a[href*="#"]:not([href="#"])').on("click",function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var t=$(this.hash);if($(".active").removeClass("active"),t.parent().addClass("active"),t=t.length?t:$("[name="+this.hash.slice(1)+"]"),t.length)return $("html, body").animate({scrollTop:t.offset().top-20},600),!1}})}),$(function(){var t,e,n;$("#resume-modal").on("show.bs.modal",function(a){e=$("#modal-content"),n=$("#modal-body");var i=$(a.relatedTarget).data("panel-type");i!==t&&(e.addClass("panel-"+i),e.removeClass("panel-"+t),t=i);var o=$(a.relatedTarget).data("modal-data");o.title?e.find("#title").text(o.title).show():e.find("#title").hide(),o.company?n.find("#company").text(o.company.name).show():n.find("#company").hide(),o.description?n.find("#description").text(o.description).show():n.find("#description").hide(),o.start?n.find("#start").text(moment(o.start).format("MMMM YYYY")).show():n.find("#start").hide(),o.end?n.find("#end").text(moment(o.end).format("MMMM YYYY")).show():n.find("#end").hide()})}),$("body").on("hidden.bs.modal",".modal",function(){$(this).removeData("bs.modal")}),$(function(){var t,e,n,a;$("#profile .read-more").on("click",function(){return a=0,t=$(this),e=t.parent(),n=e.find("p"),n.each(function(){a+=$(this).outerHeight()}),e.css({height:e.height(),"max-height":9999}).animate({height:a},400),t.css({display:"none"}),!1})}),$(function(){function t(t,n){var a,i={_id:n,section:t},o="form[data-id='"+n+"'][data-section='"+t+"'] [data-type='resume-form-field']";return $(o).each(function(){a=$(this)[0];var t=a.dataset.prop,n=a.innerHTML||a.checked||a.value;e(i,t,n)}),JSON.stringify(i)}function e(t,e,n){for(var a=t,i=e.split("."),o=i.length,s=0;s<o-1;s++){var r=i[s];a[r]||(a[r]={}),a=a[r]}return a[i[o-1]]=n,a}$(".btn-admin-save").on("click",function(e){e.preventDefault();var n=$(this).closest("form"),a=n.data("section"),i=n.data("id"),o=t(a,i);confirm("Are you sure you want to delete this?")&&$.ajax({method:"PUT",url:"/admin",data:o,contentType:"application/json"}).done(function(t,e,n){toastr.success(t)}).fail(function(t,e,n){toastr.error(t.responseText)})})}),$(function(){$(".btn-admin-delete").on("click",function(t){t.preventDefault();var e=$(this),n=e.closest("form"),a={};a.section=n.data("section"),a._id=n.data("id"),confirm("Are you sure you want to delete this?")&&$.ajax({method:"DELETE",url:"/admin",data:JSON.stringify(a),contentType:"application/json"}).done(function(t,n,a){toastr.success(t),e.closest(".admin-element").hide("normal",function(){$(this).remove()})}).fail(function(t,e,n){toastr.error(t.responseText)})})}),$(function(){$("#admin-tabs a").click(function(t){t.preventDefault(),$(this).tab("show")})});
//# sourceMappingURL=data:application/json;base64,
