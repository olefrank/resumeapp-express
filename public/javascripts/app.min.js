"use strict";$(function(){var t=$("#btn-skills-more"),e=function(e){t.toggleClass("skills-more"),t.toggleClass("skills-less")};$(document).on("click","#btn-skills-more",e)}),$(function(){$('a[href*="#"]:not([href="#"])').on("click",function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var t=$(this.hash);if($(".active").removeClass("active"),t.parent().addClass("active"),t=t.length?t:$("[name="+this.hash.slice(1)+"]"),t.length)return $("html, body").animate({scrollTop:t.offset().top-20},600),!1}})}),$(function(){var t,e,n;$("#resume-modal").on("show.bs.modal",function(i){e=$("#modal-content"),n=$("#modal-body");var a=$(i.relatedTarget).data("panel-type");a!==t&&(e.addClass("panel-"+a),e.removeClass("panel-"+t),t=a);var o=$(i.relatedTarget).data("modal-data");o.title?e.find("#title").text(o.title).show():e.find("#title").hide(),o.company?n.find("#company").text(o.company.name).show():n.find("#company").hide(),o.description?n.find("#description").text(o.description).show():n.find("#description").hide(),o.start?n.find("#start").text(moment(o.start).format("MMMM YYYY")).show():n.find("#start").hide(),o.end?n.find("#end").text(moment(o.end).format("MMMM YYYY")).show():n.find("#end").hide()})}),$("body").on("hidden.bs.modal",".modal",function(){$(this).removeData("bs.modal")}),$(function(){var t,e,n,i;$("#profile .read-more").on("click",function(){return i=0,t=$(this),e=t.parent(),n=e.find("p"),n.each(function(){i+=$(this).outerHeight()}),e.css({height:e.height(),"max-height":9999}).animate({height:i},400),t.css({display:"none"}),!1})}),$(function(){function t(t,n){var i,a={},o=t.attr("id"),s=t.data("section");return o&&(a._id=o),s&&(a.section=s),$(t).find(".resume-form-field").each(function(){i=$(this)[0];var t=i.dataset.prop,o=i.innerHTML||i.checked||i.value;n?e(a,t,o):a[t]=o}),JSON.stringify(a)}function e(t,e,n){for(var i=t,a=e.split("."),o=a.length,s=0;s<o-1;s++){var r=a[s];i[r]||(i[r]={}),i=i[r]}return i[a[o-1]]=n,i}var n=function(e){e.preventDefault();var n,i=$(this).closest("form"),a=i.attr("id");a?confirm("Vil du gemme Ã¦ndringerne?")&&(n=t(i,!0),$.ajax({method:"PUT",url:"/admin",data:n,contentType:"application/json"}).done(function(t,e,n){toastr.success(t)}).fail(function(t,e,n){toastr.error(t.responseText)})):confirm("Vil du gemme elementet?")&&(n=t(i,!1),$.ajax({method:"POST",url:"/admin",data:n,contentType:"application/json"}).done(function(t,e,n){toastr.success(t)}).fail(function(t,e,n){toastr.error(t.responseText)}))},i=function(t){t.preventDefault();var e=$(this),n=e.closest("form"),i={};i.section=n.data("section"),i._id=n.attr("id"),i._id?confirm("Vil du slette elementet?")&&$.ajax({method:"DELETE",url:"/admin",data:JSON.stringify(i),contentType:"application/json"}).done(function(t,n,i){a(e,$(this)),toastr.success(t)}).fail(function(t,e,n){toastr.error(t.responseText)}):a(e,$(this))},a=function(t,e){t.closest(".admin-element").hide("normal",function(){e.remove()})},o=function(t){t.preventDefault();var e=$(this).closest(".add-new-element"),n=e.next().find("form"),i=n.data("section");$.get("/templates/"+i).then(function(t){$(t).hide().prependTo(".element-list-"+i).fadeIn("normal")})};$(document).on("click",".btn-admin-save",n),$(document).on("click",".btn-admin-delete",i),$(document).on("click",".btn-admin-addnew",o)}),$(function(){$("#admin-tabs a").click(function(t){t.preventDefault(),$(this).tab("show")})});
//# sourceMappingURL=data:application/json;base64,
